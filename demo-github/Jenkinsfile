pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_USERNAME', defaultValue: '', description: 'Docker Hub username')
        string(name: 'DOCKER_PASSWORD', defaultValue: '', description: 'Docker Hub token / password')
    }

    environment {
        IMAGE_NAME        = 'demo-github-app'
        SONAR_HOST_URL    = 'http://192.168.136.143:9000'
        SONAR_TOKEN       = 'sqp_9e0f3e0d01fd721572a25292068f7964dad8a9f7'
        SONAR_PROJECT_KEY = 'EvanBlaise'
    }

    stages {

        stage('Checkout')    { steps { checkout scm } }

        stage('Maven package') {
            agent { docker { image 'maven:3.9.10-sapmachine-17' } }
            steps {
                dir('demo-github') { sh 'mvn clean package' }
                sh "ls"
                sh "ls demo-github/target"
                sh "COPY target/demo-github-0.0.1-SNAPSHOT.jar app.jar"
            }
        }

        stage('Docker build') {
            steps {
                dir('demo-github') {
                sh "docker build -t demo-github-app ."
                sh "ls"
                }
            }
        }

        stage('Docker login & push') {
            steps {
                script {
                    def fullImage = "${params.DOCKER_USERNAME}/${IMAGE_NAME}:latest"
                    sh """
                        echo '${params.DOCKER_PASSWORD}' | docker login -u '${params.DOCKER_USERNAME}' --password-stdin
                        docker push ${fullImage}
                        docker logout
                    """
                }
            }
        }

        stage('SonarQube analysis') {
            agent { docker { image 'maven:3.9.10-sapmachine-17' } }
            steps {
                dir('demo-github') {
                    sh """
                        mvn org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \\
                           -Dsonar.projectKey=${SONAR_PROJECT_KEY} \\
                           -Dsonar.host.url=${SONAR_HOST_URL} \\
                           -Dsonar.login=${SONAR_TOKEN}
                    """
                }
            }
        }
    }

    post { always { cleanWs() } }
}
