pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_USERNAME', defaultValue: '', description: 'Docker Hub username')
        string(name: 'DOCKER_PASSWORD', defaultValue: '', description: 'Docker Hub token / password')
    }

    environment {
        IMAGE_NAME        = 'demo-github-app'
        SONAR_HOST_URL    = 'http://192.168.136.143:9000'
        SONAR_TOKEN       = 'sqp_9e0f3e0d01fd721572a25292068f7964dad8a9f7'
        SONAR_PROJECT_KEY = 'EvanBlaise'
    }

    stages {

        stage('Checkout')    { steps { checkout scm } }

        stage('Maven package') {
            agent { docker { image 'maven:3.9.10-sapmachine-17' } }
                 script {
                    def mvnHome = tool 'mvn'
                    sh "${mvnHome}/bin/mvn clean package -DskipTests"
                }
        }

                stage('Generate Dockerfile') {
            steps {
                script {
                    writeFile file: 'Dockerfile', text: '''
                        FROM eclipse-temurin:21-jre
                        WORKDIR /app
                        COPY target/*.jar app.jar
                        ENTRYPOINT ["java", "-jar", "app.jar"]
                                            '''.stripIndent()
                }
            }
        }

        stage('Docker login & push') {
            steps {
                script {
                    echo '${params.DOCKER_PASSWORD}' | docker login -u '${params.DOCKER_USERNAME}' --password-stdin
                        def image = docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")
                        image.push()
                        image.push('latest')
            }
        }

        stage('SonarQube analysis') {
            agent { docker { image 'maven:3.9.10-sapmachine-17' } }
            steps {
                dir('demo-github') {
                    sh """
                        mvn org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \\
                           -Dsonar.projectKey=${SONAR_PROJECT_KEY} \\
                           -Dsonar.host.url=${SONAR_HOST_URL} \\
                           -Dsonar.login=${SONAR_TOKEN}
                    """
                }
            }
        }
    }

    post { always { cleanWs() } }
}
